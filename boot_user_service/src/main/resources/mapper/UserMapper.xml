<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sc.mapper.UserMapper">

    <select id="getAllUser" resultType="com.sc.entity.User">
        SELECT * FROM user
    </select>

    <update id="updateUser" parameterType="com.sc.entity.User">
        update user
        <set>
            <if test="userName!=null">user_name=#{userName},</if>
            <if test="userRealName!=null">user_realname=#{userRealName},</if>
            <if test="userSex!=null">user_sex=#{userSex},</if>
            <if test="password!=null">password=#{password},</if>
            <if test="userEmail!=null">user_email=#{userEmail},</if>
            <if test="userTel!=null">user_tel=#{userTel},</if>
            <if test="roleId!=null">role_id=#{roleId},</if>
            <if test="userBirth!=null">user_birth=#{userBirth}</if>
        </set>
        where user_id=#{userId}
    </update>

    <select id="getUserById" parameterType="Integer" resultType="com.sc.entity.User">
        SELECT * FROM user where user_id=#{userId}
    </select>

    <select id="getUserByRoleId" parameterType="Integer" resultType="com.sc.entity.User">
        SELECT * FROM user where role_id=#{roleId}
    </select>

    <select id="getUserWithOutAdmin" resultType="com.sc.entity.User">
        SELECT * FROM user where role_id not in (1)
    </select>

    <select id="getUserByName" parameterType="String" resultType="com.sc.entity.User">
        SELECT * FROM user where user_name=#{userName}
    </select>

    <select id="searchUser" parameterType="String" resultType="com.sc.entity.User">
        SELECT * FROM user where user_realname like #{userRealName} and role_id not in (1)
    </select>

    <insert id="addUser" parameterType="com.sc.entity.User" useGeneratedKeys="true" keyProperty="userId">
        insert into user(user_id,user_name,user_realname,password,role_id,user_sex,user_tel,user_email,user_birth) values (#{userId},#{userName},#{userRealName},#{password},#{roleId},#{userSex},#{userTel},#{userEmail},#{userBirth})
    </insert>

    <delete id="deleteUser" parameterType="Integer">
        delete from user where user_id=#{userId}
    </delete>

</mapper>